/**
 * @lineup-lite/table
 * https://github.com/sgratzl/lineup-lite
 *
 * Copyright (c) 2021 Samuel Gratzl <sam@sgratzl.com>
 */

.lt-table {
  --current-color: currentcolor;
  --current-color-rgb: 0, 0, 0;
  --current-inverted-color-rgb: 255, 255, 255;
  --current-inverted-color: rgb(var(--current-inverted-color-rgb));
  --select-color: #ffa500;
}
.lt-dark {
  --current-color-rgb: 255, 255, 255;
  --current-inverted-color-rgb: 0, 0, 0;
  --select-color: #ff8c00;
}
.lt-table-virtual {
  display: flex;
  flex-direction: column;
}

.lt-thead {
  margin-bottom: 0.25em;
}

.lt-thead-virtual {
  overflow: hidden;
}

.lt-th {
  display: inline-flex;
  flex-direction: column;
  justify-content: space-between;
}

.lt-th-group {
}

.lt-tbody {
}

.lt-tbody-virtual {
  flex: 1 1 0;
  overflow: auto;
}

.lt-tr {
}

.lt-tr-virtual {
  position: absolute;
  left: 0;
  top: 0;
}

/* .lt-tr-selected {
  box-shadow: 0 0 0 2px var(--select-color, #ffa500);
} */

.lt-th,
.lt-td {
  margin: 0 0.25em;
  text-overflow: ellipsis;
  white-space: nowrap;
}

.lt-td {
  display: inline-flex !important;
  flex-direction: column;
  justify-content: center;
}

.lt-th-support,
.lt-td-support {
  margin: 0;
}

.lt-header {
  text-align: center;
}

.lt-column-resize-handle {
  position: absolute;
  top: 0;
  right: -0.25em;
  width: 0.5em;
  height: 100%;
  background: var(--current-color, black);
  cursor: col-resize;
  transform: translateX(50%);
  /* prevents from scrolling while dragging on touch devices */
  touch-action: none;

  transition: opacity 0.25s ease;
  opacity: 0;
}

.lt-th:hover > .lt-column-resize-handle,
.lt-column-resizing > .lt-column-resize-handle {
  z-index: 1;
  opacity: 0.1;
}

.lt-summary:not(.lt-group)::before {
  /** always have a content */
  content: attr(data-min) '';
  border-top: 1px solid var(--current-color, currentcolor);
}

.lt-summary[data-max]::before {
  border-left: 1px solid var(--current-color, currentcolor);
  border-image: linear-gradient(to bottom, var(--current-color, currentcolor) 0%, var(--current-color, currentcolor) 50%, transparent 50%);
  border-image-slice: 1 1;
}

.lt-summary[data-max]::after {
  border-top: 1px solid var(--current-color, currentcolor);
  border-right: 1px solid var(--current-color, currentcolor);
  border-image: linear-gradient(to bottom, var(--current-color, currentcolor) 0%, var(--current-color, currentcolor) 50%, transparent 50%);
  border-image-slice: 1 1;
}
